// Generated by Dagger (https://dagger.dev).
package com.ntpro.mobileandroiddevtestwork.di;

import com.ntpro.mobileandroiddevtestwork.data.network.Server;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvidesServerFactory implements Factory<Server> {
  @Override
  public Server get() {
    return providesServer();
  }

  public static AppModule_ProvidesServerFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static Server providesServer() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesServer());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvidesServerFactory INSTANCE = new AppModule_ProvidesServerFactory();
  }
}
